// @flow
import type { ReactComponentStyled } from "styled-components";

import type { Globals, Ref } from "../common/common.js.flow";

type Option = {|
  +value: string | number,
  +label?: string,
  +disabled?: boolean,
|};

type Size = "small" | "normal";

export type Props = {|
  +size?: Size,
  +label?: string,
  +placeholder?: string,
  +value?: string | number,
  +disabled?: boolean,
  +name?: string,
  +error?: React$Node,
  +help?: React$Node,
  +onChange?: (ev: SyntheticInputEvent<HTMLSelectElement>) => void | Promise<any>,
  +onFocus?: (ev: SyntheticInputEvent<HTMLSelectElement>) => void | Promise<any>,
  +onBlur?: (ev: SyntheticInputEvent<HTMLSelectElement>) => void | Promise<any>,
  +options: Option[],
  +prefix?: React$Node,
  ...Globals,
  ...Ref,
|};

declare export var SelectContainer: ReactComponentStyled<any>;

declare export default React$ComponentType<Props>;
